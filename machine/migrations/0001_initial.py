# Generated by Django 2.2.4 on 2019-12-05 18:34

from django.db import migrations, models
import django_mysql.models
import machine.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('Machine_ID', models.AutoField(primary_key=True, serialize=False)),
                ('DateTimeCreation', models.DateTimeField(auto_now_add=True)),
                ('Machine_ID_Original', models.IntegerField(null=True)),
                ('Project_Name', models.CharField(blank=True, max_length=200, verbose_name='Name')),
                ('Project_Description', models.TextField(blank=True, verbose_name='Description')),
                ('Project_DataUsage', models.TextField(blank=True, verbose_name='DataUsage')),
                ('input_file', models.FileField(null=True, upload_to=machine.models.get_upload_path, verbose_name='file')),
                ('Project_DataSourceIsPublic', models.BooleanField(default=False)),
                ('Project_DataSourceSampleOnlyPublic', models.BooleanField(default=False)),
                ('Project_DataSource_PriceUSD', models.BooleanField(default=False)),
                ('Project_DataSourceIsPrivate', models.BooleanField(default=False)),
                ('Project_APISolving_IsPublic', models.BooleanField(default=False)),
                ('Project_APISolving_PriceUSD', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
                ('Project_MachineIsDuplicatable', models.BooleanField(default=False)),
                ('Project_MachineCopyCostUSD', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
                ('Project_MachineCopyUpdateCostUSD', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
                ('Project_MachineIsExportable', models.BooleanField(default=False)),
                ('Project_MachineExportCostUSD', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True)),
                ('Project_ColumnsDescription', django_mysql.models.JSONField(blank=True, default=dict)),
                ('AnalysisSource_ColumnsNameInput', django_mysql.models.JSONField(blank=True, default=dict)),
                ('AnalysisSource_ColumnsNameOutput', django_mysql.models.JSONField(blank=True, default=dict)),
                ('AnalysisSource_ColumnType', django_mysql.models.JSONField(default=dict)),
                ('AnalysisSource_Errors', django_mysql.models.JSONField(blank=True, default=dict)),
                ('AnalysisSource_Warnings', django_mysql.models.JSONField(blank=True, default=dict)),
                ('AnalysisSource_ColumnsMissingPercentage', django_mysql.models.JSONField(default=dict)),
                ('AnalysisSource_ListMaxSize', django_mysql.models.JSONField(default=dict)),
                ('Machine_IsDataMissingTolerant', models.BooleanField(default=False)),
                ('Machine_IsLevelTrainingNormal', models.BooleanField(default=False)),
                ('Machine_IsLevelTrainingMaximum', models.BooleanField(default=False)),
                ('Machine_IsMultipleMachine', models.BooleanField(default=False)),
                ('Machine_IsReRunTraining', models.BooleanField(default=False)),
                ('Machine_IsToRunAFP', models.BooleanField(default=False)),
                ('Machine_IsToRunARUC', models.BooleanField(default=False)),
                ('Machine_IsModeLSTM', models.BooleanField(default=False)),
                ('Machine_IsModeRNN', models.BooleanField(default=False)),
                ('MultipleMachine_IsFront', models.BooleanField(default=False)),
                ('MultipleMachine_IsAgregator', models.BooleanField(default=False)),
                ('MultipleMachine_IsElement', models.BooleanField(default=False)),
                ('EncDec_ColumnsInNumericMode', django_mysql.models.JSONField(default=dict)),
                ('EncDec_ColumnsInMultiplexedMode', django_mysql.models.JSONField(default=dict)),
                ('EncDec_ColumnsFLOATFrequ3Mode', django_mysql.models.JSONField(default=dict)),
                ('EncDec_ColumnsFloatMostFrequMode', models.BinaryField(null=True)),
                ('EncDec_ColumnsOutputInformations', models.BinaryField(null=True)),
                ('EncDec_ColumnsInputEncodedCount', models.IntegerField(null=True)),
                ('EncDec_ColumnsOutputEncodedCount', models.IntegerField(null=True)),
                ('EncDec_ColumnsMissingPercentage', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('EncDec_Errors', django_mysql.models.JSONField(default=dict)),
                ('EncDec_Warnings', django_mysql.models.JSONField(default=dict)),
                ('ParameterCNN_ShapeAuto', models.BooleanField(default=True)),
                ('ParameterCNN_Loss', models.CharField(blank=True, choices=[('BinaryCrossentropy', 'Binary Crossentropy'), ('SquaredHinge', 'Squared Hinge'), ('Poisson', 'Poisson'), ('MeanSquaredError', 'Mean Squared Error'), ('MeanAbsoluteError', 'Mean Absolute Error'), ('Huber', 'Huber'), ('Hinge', 'Hinge'), ('CosineSimilarity', 'Cosine Similarity')], default='BinaryCrossentropy', max_length=50, null=True, verbose_name='Loss')),
                ('ParameterCNN_Optimizer', models.CharField(blank=True, choices=[('SGD', 'SGD'), ('RMSprop', 'RMSprop'), ('Adadelta', 'Adadelta'), ('Adam', 'Adam'), ('Adamax', 'Adamax'), ('Nadam', 'Nadam')], default='SGD', max_length=50, null=True, verbose_name='Optimizer')),
                ('ParameterCNN_Shape', models.CharField(blank=True, default='[]', max_length=400, null=True, verbose_name='Shape')),
                ('ParameterCNN_BatchEpochAuto', models.BooleanField(default=True, verbose_name='Batch Epoch Auto')),
                ('ParameterCNN_BatchSize', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Batch Size')),
                ('ParameterCNN_Epoch', models.PositiveIntegerField(blank=True, default=1, null=True, verbose_name='Epoch')),
                ('Training_AcuracyAverage', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('Training_LossAverage', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('Training_MachineModel', django_mysql.models.JSONField(default=dict)),
                ('Training_MachineWeights', models.BinaryField(blank=True, null=True)),
                ('Training_FindParametersDelaySec', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('Training_TrainingTotalDelaySec', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('Training_TrainingCellDelaySec', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('Training_DateTimeMachineModel', models.DateTimeField(null=True)),
                ('Training_FileTensorBoardLog', models.BinaryField(null=True)),
                ('Training_TrainingEpochCount', models.IntegerField(null=True)),
                ('Training_TrainingBatchSize', models.IntegerField(null=True)),
                ('Training_TotalTrainingLineCount', models.IntegerField(null=True)),
                ('Training_TypeMachineHardware', models.TextField(null=True)),
                ('Training_DecisionTreeImage', models.BinaryField(null=True)),
                ('TrainingEval_LossSampleTraining', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_LossSampleEvaluation', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_LossSampleTrainingNoise', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_LossSampleEvaluationNoise', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_AcuracySampleTraining', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_AcuracySampleEvaluation', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_AcuracySampleTrainingNoise', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
                ('TrainingEval_AcuracySampleEvaluationNoise', models.DecimalField(decimal_places=3, max_digits=12, null=True)),
            ],
            options={
                'verbose_name': 'Machine',
                'verbose_name_plural': 'Machines',
                'db_table': 'Machine',
            },
            bases=(models.Model, machine.models.MachineMixin),
        ),
        migrations.CreateModel(
            name='MachineMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('message_file', models.FileField(blank=True, null=True, upload_to='machinemessage/%Y-%m-%d/%H-%M', verbose_name='file')),
            ],
            options={
                'verbose_name': 'Machine Message',
                'verbose_name_plural': 'Machine Message',
            },
        ),
    ]
